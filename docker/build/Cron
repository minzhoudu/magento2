FROM php:8.1.9-fpm-bullseye

ARG UID=1000

ENV PHP_MEMORY_LIMIT 2G
ENV DEBUG true
ENV MAGENTO_RUN_MODE development
ENV UPLOAD_MAX_FILESIZE 64M
ENV PHP_EXTENSIONS bcmath bz2 calendar curl exif gd gettext imagick intl mbstring mysqli oauth opcache pcntl pdo_mysql redis soap sockets sodium sysvmsg sysvsem sysvshm tidy xsl zip

RUN apt-get update && apt-get install -y \
  apt-utils \
  automake \
  cron \
  curl \
  default-mysql-client \
  fuse \
  g++ \
  git \
  gnupg \
  gzip \
  iproute2 \
  libbz2-dev \
  libc-client-dev \
  libcurl4-gnutls-dev \
  libedit-dev \
  libedit2 \
  libfreetype6-dev \
  libfuse-dev \
  libicu-dev \
  libjpeg62-turbo-dev \
  libldap2-dev \
  libmagickcore-dev \
  libmagickwand-dev \
  libmcrypt-dev \
  libonig-dev \
  libpng-dev \
  libsodium-dev \
  libssh2-1-dev \
  libssl-dev \
  libtidy-dev \
  libwebp-dev \
  libxml2-dev \
  libxslt1-dev \
  libyaml-dev \
  libzip-dev \
  lsof \
  lynx \
  mailutils \
  make \
  msmtp \
  net-tools \
  openconnect \
  openssh-client \
  pkg-config \
  procps \
  psmisc \
  redis-tools \
  supervisor \
  tar \
  unzip \
  vim \
  vim \
  wget \
  zip \
  && apt-get clean

RUN curl -o LATEST.tar.gz https://download.libsodium.org/libsodium/releases/LATEST.tar.gz && \
  tar xvzf LATEST.tar.gz && \
  cd libsodium-stable && \
  ./configure && \
  make && make check && \
  make install && \
  cd /var/www/html && rm -Rf LATEST.tar.gz libsodium-stable

RUN docker-php-ext-configure \
  gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ --with-webp=/usr/include/

RUN docker-php-ext-configure \
  zip

RUN docker-php-ext-install \
  bcmath \
  bz2 \
  calendar \
  curl \
  exif \
  gd \
  gettext \
  intl \
  mbstring \
  mysqli \
  opcache \
  pcntl \
  pdo_mysql \
  soap \
  sockets \
  sodium \
  sysvmsg \
  sysvsem \
  sysvshm \
  tidy \
  xsl \
  zip

RUN docker-php-ext-enable \
  bcmath \
  bz2 \
  calendar \
  curl \
  exif \
  gd \
  gettext \
  intl \
  mbstring \
  mysqli \
  opcache \
  pcntl \
  pdo_mysql \
  soap \
  sockets \
  sodium \
  sysvmsg \
  sysvsem \
  sysvshm \
  tidy \
  xsl \
  zip

RUN sed -i -e 's/^zend_extension/\;zend_extension/g' /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini

RUN apt-get update \
  && apt-get install -y \
  libpcre3 \
  libpcre3-dev

RUN curl -sS https://getcomposer.org/installer | \
  php -- --install-dir=/usr/local/bin --filename=composer --2

ENV PATH="/var/www/.composer/vendor/bin/:${PATH}"

RUN curl -o n98-magerun2.phar https://files.magerun.net/n98-magerun2.phar \
  && chmod +x ./n98-magerun2.phar \
  && mv ./n98-magerun2.phar /usr/local/bin/

RUN curl -o pestle.phar http://pestle.pulsestorm.net/pestle.phar \
  && chmod +x ./pestle.phar \
  && mv ./pestle.phar /usr/local/bin/

RUN pecl channel-update pecl.php.net \
  && pecl install xdebug \
  && pecl install imagick\
  && pecl install redis \
  && pecl install oauth \
  && pecl install ssh2-1.3.1 \
  && docker-php-ext-enable imagick \
  && docker-php-ext-enable redis \
  && docker-php-ext-enable oauth \
  && echo "extension=oauth.so" > /usr/local/etc/php/conf.d/docker-php-ext-oauth.ini \
  && docker-php-ext-enable ssh2

RUN groupadd -g ${UID} app \
  && useradd -g ${UID} -u ${UID} -d /var/www -s /bin/bash app

RUN apt-get install -y gnupg

RUN curl -sSLO https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64 \
  && chmod +x mhsendmail_linux_amd64 \
  && mv mhsendmail_linux_amd64 /usr/local/bin/mhsendmail

RUN printf '* *\t* * *\tapp\t%s/usr/local/bin/php /var/www/html/update/cron.php\n' >> /etc/crontab \
  && printf '* *\t* * *\tapp\t%s/usr/local/bin/php /var/www/html/bin/magento cron:run\n' >> /etc/crontab \
  && printf '* *\t* * *\tapp\t%s/usr/local/bin/php /var/www/html/bin/magento setup:cron:run\n#\n' >> /etc/crontab

COPY ./docker/config/www.conf /usr/local/etc/php-fpm.d/
COPY ./docker/config/php.ini /usr/local/etc/php/
COPY ./docker/config/php-fpm.conf /usr/local/etc/
COPY ./docker/scripts/cronstart /usr/local/bin/

RUN mkdir -p /etc/nginx/html /var/www/html /sock \
  && chown -R app:app /etc/nginx /var/www /usr/local/etc/php/conf.d /sock

USER app:app

ENV PATH="/var/www/.composer/vendor/bin/:${PATH}"

VOLUME /var/www

WORKDIR /var/www/html

RUN ulimit -s 65536
